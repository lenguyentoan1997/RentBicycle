//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentBicycle.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RentBicycleEntities : DbContext
    {
        public RentBicycleEntities()
            : base("name=RentBicycleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrdersDetail> OrdersDetails { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<usp_Login_Result> usp_Login(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Login_Result>("usp_Login", emailParameter, passwordParameter);
        }
    
        public virtual int usp_RegisterAccount(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegisterAccount", emailParameter, passwordParameter);
        }
    
        public virtual int usp_UpdateAccount(Nullable<int> id, string name, string avtar, Nullable<System.DateTime> dob, string phone)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var avtarParameter = avtar != null ?
                new ObjectParameter("avtar", avtar) :
                new ObjectParameter("avtar", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateAccount", idParameter, nameParameter, avtarParameter, dobParameter, phoneParameter);
        }
    
        public virtual int usp_UpdatePassword(Nullable<int> id, string pass)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePassword", idParameter, passParameter);
        }
    
        public virtual ObjectResult<usp_SelectProductIdQuanityByYear_Result> usp_SelectProductIdQuanityByYear(Nullable<System.DateTime> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectProductIdQuanityByYear_Result>("usp_SelectProductIdQuanityByYear", yearParameter);
        }
    
        public virtual ObjectResult<usp_SelectProductIdQuanityByYear1_Result> usp_SelectProductIdQuanityByYear1(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectProductIdQuanityByYear1_Result>("usp_SelectProductIdQuanityByYear1", yearParameter);
        }
    
        public virtual ObjectResult<usp_SelectProductIdQuanityByYear2_Result> usp_SelectProductIdQuanityByYear2(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectProductIdQuanityByYear2_Result>("usp_SelectProductIdQuanityByYear2", yearParameter);
        }
    
        public virtual ObjectResult<usp_SelectMonthTotalByOrders_Result> usp_SelectMonthTotalByOrders(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMonthTotalByOrders_Result>("usp_SelectMonthTotalByOrders", yearParameter);
        }
    
        public virtual ObjectResult<usp_SelectMonthTotalByOrders1_Result> usp_SelectMonthTotalByOrders1(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMonthTotalByOrders1_Result>("usp_SelectMonthTotalByOrders1", yearParameter);
        }
    }
}
